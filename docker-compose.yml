services:
  db:
    image: postgres:14.13
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - PGDATA=/var/lib/postgresql/data
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    ports:
      - "5433:5432"
  redis:
    image: redis:6.0.16
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - REDIS_PASS=${REDIS_PASS}
    ports:
      - "6381:6379"
    volumes:
      - ./redisdata:/data
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASS" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        redis-server /usr/local/etc/redis/redis.conf
      '
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASS", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    depends_on:
      - frontend

  backend:
    build:
      context: ./
      dockerfile: ./app/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_URL=${DB_URL}

      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}

      - BACK_HOST=${BACK_HOST}
      - BACK_PORT=${BACK_PORT}
      - FRONT_HOST=${FRONT_HOST}
      - FRONT_PORT=${FRONT_PORT}
      - SECRET_KEY=${SECRET_KEY}

      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - REDIS_PASS=${REDIS_PASS}

      - DATE_TIME_FORMAT=${DATE_TIME_FORMAT}

      - EMAIL_SERVER=${EMAIL_SERVER}
      - EMAIL_PORT=${EMAIL_PORT}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_EMAIL_PASSWORD=${ADMIN_EMAIL_PASSWORD}

      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FILE=${LOG_FILE}
    restart: always
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "5173:5173"
    environment:
      - BACK_HOST=${BACK_HOST}
      - BACK_PORT=${BACK_PORT}
      - FRONT_HOST=${FRONT_HOST}
      - FRONT_PORT=${FRONT_PORT}
    restart: always
    depends_on:
      - backend

volumes:
  pgdata:
  redisdata:
