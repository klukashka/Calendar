services:
  db:
    image: postgres:14.13
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - PGDATA=/var/lib/postgresql/data
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data
#    container_name: db
    restart: always
    ports:
      - "5433:5432"
#    hostname: ${DB_HOST}
#    networks:
#      - test
#        ipv4_address: 172.28.2.1

  backend:
#    container_name: backend
    build:
      context: ./
      dockerfile: ./app/Dockerfile
#    expose:
#      - 8000
    ports:
      - "8000:8000"
    environment:
      - DB_URL=${DB_URL}
      - BACK_HOST=${BACK_HOST}
      - BACK_PORT=${BACK_PORT}
      - FRONT_HOST=${FRONT_HOST}
      - FRONT_PORT=${FRONT_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - DATE_TIME_FORMAT=${DATE_TIME_FORMAT}

      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_EMAIL_PASSWORD=${ADMIN_EMAIL_PASSWORD}
    restart: always
    depends_on:
      - db
#    networks:
#      - test
#        ipv4_address: 172.28.2.2

  frontend:
#    container_name: frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
#    expose:
#      - 5173
    ports:
      - "5173:5173"
    environment:
      - BACK_HOST=${BACK_HOST}
      - BACK_PORT=${BACK_PORT}
      - FRONT_HOST=${FRONT_HOST}
      - FRONT_PORT=${FRONT_PORT}
    restart: always
    depends_on:
      - backend
#    networks:
#      - test
#        ipv4_address: 172.28.2.3
#networks:
#  test:
#    driver: bridge
volumes:
  pgdata: